// <auto-generated />
using Market_Shop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Market_Shop.Migrations
{
    [DbContext(typeof(Market_ShopDB))]
    partial class Market_ShopDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Market_Shop.Models.Manager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Market_Shop.Models.PartnerProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("PartnersId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PartnersId");

                    b.HasIndex("ProductId");

                    b.ToTable("PartnerProduct");
                });

            modelBuilder.Entity("Market_Shop.Models.Partners", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Addres_Partners")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Patners_Type_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Patners_Type_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Rate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Patners_Type_id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Market_Shop.Models.Patners_type", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Patners_types")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patners_type");
                });

            modelBuilder.Entity("Market_Shop.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Min_cost_")
                        .HasColumnType("double precision");

                    b.Property<string>("Name_Product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Product_typeId")
                        .HasColumnType("bigint");

                    b.Property<long>("Артикул")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Product_typeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Market_Shop.Models.Product_type", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Product_types")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ratio_Product_types")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Product_type");
                });

            modelBuilder.Entity("Market_Shop.Models.Requst", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<long>("PartnersId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PartnersId");

                    b.HasIndex("ProductionId");

                    b.ToTable("Requst");
                });

            modelBuilder.Entity("Market_Shop.Models.PartnerProduct", b =>
                {
                    b.HasOne("Market_Shop.Models.Partners", "Partners")
                        .WithMany("PartnerProducts")
                        .HasForeignKey("PartnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Market_Shop.Models.Product", "Product")
                        .WithMany("PartnerProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partners");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Market_Shop.Models.Partners", b =>
                {
                    b.HasOne("Market_Shop.Models.Patners_type", "Patners_Type")
                        .WithMany("Partners")
                        .HasForeignKey("Patners_Type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patners_Type");
                });

            modelBuilder.Entity("Market_Shop.Models.Product", b =>
                {
                    b.HasOne("Market_Shop.Models.Product_type", "Product_type")
                        .WithMany("Products")
                        .HasForeignKey("Product_typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_type");
                });

            modelBuilder.Entity("Market_Shop.Models.Requst", b =>
                {
                    b.HasOne("Market_Shop.Models.Manager", "Managers")
                        .WithMany("Requst")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Market_Shop.Models.Partners", "Partners")
                        .WithMany("Requst")
                        .HasForeignKey("PartnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Market_Shop.Models.Product", "Product")
                        .WithMany("Requst")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Managers");

                    b.Navigation("Partners");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Market_Shop.Models.Manager", b =>
                {
                    b.Navigation("Requst");
                });

            modelBuilder.Entity("Market_Shop.Models.Partners", b =>
                {
                    b.Navigation("PartnerProducts");

                    b.Navigation("Requst");
                });

            modelBuilder.Entity("Market_Shop.Models.Patners_type", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("Market_Shop.Models.Product", b =>
                {
                    b.Navigation("PartnerProducts");

                    b.Navigation("Requst");
                });

            modelBuilder.Entity("Market_Shop.Models.Product_type", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
